<launch>
  <!-- Arguments -->
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="map_file" default="$(find waiter_bot)/maps/mapa_costa_coffee.yaml"/>
  <arg name="open_rviz" default="true"/>
  <arg name="move_forward_only" default="false"/>

  <!-- Turtlebot3 -->
  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)" />
  </include>

  <!-- Map server -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>

  <!-- AMCL -->
  <include file="$(find turtlebot3_navigation)/launch/amcl.launch"/>

  <!-- move_base -->
  <include file="$(find turtlebot3_navigation)/launch/move_base.launch">
    <arg name="model" value="$(arg model)" />
    <arg name="move_forward_only" value="$(arg move_forward_only)"/>
  </include>
  
  <!-- We start the waypoint generator to be able to reset tables on the fly -->
   <node pkg="ros_waypoint_generator"
          type="ros_waypoint_generator"
          name="ros_waypoint_generator_node">
    </node>

    <node pkg="waiter_bot" type="save_waypoint.py" name="save_waypoint_node" output="screen">
        <param name="way_points_file_path"
                type="string"
                value="$(find waiter_bot)/waypoints_saved/$(arg map_name).pickle" />
    </node>
  <!--Move table-->
  <node pkg="waiter_bot" name="move_table" type="move_table.py" output="screen"> 
  </node>
  <!-- rviz -->
  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find turtlebot3_navigation)/rviz/turtlebot3_navigation.rviz"/>
  </group>

</launch>
